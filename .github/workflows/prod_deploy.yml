name: Prod Deploy Twitch - ECR

on:
  push:
    branches:
      - master

jobs:
  bumpversion:
    name: Bumpversion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        if: github.ref == 'refs/heads/master'
        uses: jaumann/github-bumpversion-action@v0.0.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push changes
        if: github.ref == 'refs/heads/master'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
  build_image:
    needs: bumpversion
    name: Deploy Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      if: github.ref == 'refs/heads/master'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: github.ref == 'refs/heads/master'
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      if: github.ref == 'refs/heads/master'

    - name: Build, tag, and push image to Amazon ECR
      if: github.ref == 'refs/heads/master'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: jacobs_repo
        IMAGE_TAG: twitch_scraper
      run: |
        docker-compose -f docker/docker-compose.yml build
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG